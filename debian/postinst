#!/bin/sh -e

. /usr/share/debconf/confmodule

CONFIGFILE="/etc/alternc/local.sh"
MENUFILE="/etc/alternc/menulist.txt"
MAILMAN_SCRIPT="/var/lib/mailman/mail/mailman"
MAILMAN_CONFIG="/etc/mailman/mm_cfg.py"
MAILMAN_CONFIG_TEMPLATE="/etc/alternc/templates/mailman/mm_cfg.py"
MAILMAN_CONFIG_BACKUP="/var/backups/alternc/etc-mailman-mm_cfg.py"
MAILMAN_PASS="`perl -e 'print map{("a".."z","A".."Z",0..9)[int(rand(62))]}(1..10)' `" # copy-pasted from alternc/debian/config

# new packages put binaries in /usr/lib/mailman/bin
if [ -d /usr/lib/mailman/bin ]
then
    MAILMAN_BIN="/usr/lib/mailman/bin"
else
    MAILMAN_BIN="/var/lib/mailman/bin"
fi

case "$1" in
  configure)
    . "$CONFIGFILE"

    echo "Installing mysql table"
    mysql --defaults-file=/etc/alternc/my.cnf < /usr/share/alternc/install/mailman.sql
    
    # Install generated mailman configuration if it has not been modified since
    # last package configuration
    if [ -f "$MAILMAN_CONFIG_BACKUP" ]; then
        if ! diff -q "$MAILMAN_CONFIG" "$MAILMAN_CONFIG_BACKUP"; then
            echo "$MAILMAN_CONFIG has been modified since last alternc-mailman"
            echo "configuration.  You should merge your changes to"
            echo "$MAILMAN_CONFIG_TEMPLATE and delete $MAILMAN_CONFIG_BACKUP"
            exit 1
        fi
    fi
    sed -e "s/%%fqdn%%/$FQDN/" < "$MAILMAN_CONFIG_TEMPLATE" > "$MAILMAN_CONFIG"
    cp -a -f "$MAILMAN_CONFIG" "$MAILMAN_CONFIG_BACKUP"

    MAILMAN_VERSION=`dpkg -l mailman | grep ^ii | awk '{print $3}' | sed -e s/-.*// -e 's/[^:]*://'`
    echo "detected mailman version $MAILMAN_VERSION"
    if [ -d "/usr/share/alternc-mailman/patches/mailman-true-virtual-$MAILMAN_VERSION.d" ] ; then
      PATCHDIR="/usr/share/alternc-mailman/patches/mailman-true-virtual-$MAILMAN_VERSION.d"
    else
      PATCHDIR=""
      PATCHFILE="/usr/share/alternc-mailman/patches/mailman-true-virtual-$MAILMAN_VERSION.patch"
    fi
    PATCH_MARKER="/usr/share/alternc-mailman/patches/mailman-true-virtual.applied"
    if [ -h $PATCH_MARKER ]; then
        PATCH_VERSION=`readlink $PATCH_MARKER | sed -e 's/^.*-//;s/\.patch$//;s/\.d$//'`
        echo "mailman patch detected, version $PATCH_VERSION"
        if [ "$PATCH_VERSION" = "$MAILMAN_VERSION" ]; then
            echo "mailman already patched, will not patch again"
        else
            echo "wrong version of the patch, we assume that mailman was upgraded"
            rm -f $PATCH_MARKER
        fi
    fi
    if [ "$PATCHDIR" = "" ] ; then
        if [ ! -r $PATCHFILE ]; then
            echo "no patchfile for mailman $MAILMAN_VERSION"
        fi
    fi
    if [ -r "$PATCHFILE" -o  "$PATCHDIR" != "" ] ; then if [ ! -h $PATCH_MARKER ]; then
        db_get alternc-mailman/patch-mailman || true
        if [ "$RET" = "true" ]; then
            if [ "$PATCHDIR" != "" ] ; then # we have multiple files
            {
                cd /        # patches should be relative to root, now
                patch_ok="yes"
                for pfile in $PATCHDIR/* ; do
                    if patch --dry-run -p0 < $pfile; then
                        echo "applying patch $pfile :"
                        if patch -p0 < $pfile; then
                            echo "patch applied sucessfully"
                        else
                            patch_ok="no"
                            echo "cannot apply patch, your mailman is probably broken now, aborting"
                            false
                        fi
                    else
                        echo "patch will not apply cleanly, aborting"
                        patch_ok="no"
                    fi
                    if [ "$patch_ok" = "yes" ] ; then
                        # this will tell alternc-mailman the patch was applied successfully
                        ln -fs $PATCHDIR $PATCH_MARKER
                        invoke-rc.d mailman restart || true
                    fi
                done
            }
            else # old fashion unique patch file
            {
                cd /var/lib
                echo "testing the patch"
                if patch --dry-run -p0 < $PATCHFILE; then
                    echo "applying patch"
                    if patch -p0 < $PATCHFILE; then
                        echo "patch applied sucessfully"
                        # this will tell alternc-mailman the patch was applied successfully
                        ln -fs $PATCHFILE $PATCH_MARKER
                        invoke-rc.d mailman restart || true
                    else
                        echo "cannot apply patch, your mailman is probably broken now, aborting"
                        false
                    fi
                else
                    echo "patch will not apply cleanly, aborting"
                fi
            }
            fi ; fi
        else
            echo "not applying virtual mailman patch"
        fi
    fi
    # tell debconf to go away, otherwise alternc.install will freeze
    db_stop

    # Create the "mailman" list if it does not exist yet
    if [ ! -d /var/lib/mailman/lists/mailman ]; then
        ${MAILMAN_BIN}/newlist -q mailman "root@$FQDN" "${MAILMAN_PASS}"
        ( echo "INSERT INTO mailman SET id=NULL, uid=2000, list='mailman', domain='${FQDN}', name='mailman';"
          echo "INSERT INTO mail_domain SET mail='mailman@${FQDN}', alias='mailman_${FQDN}', uid=2000, pop=0, type=1;"
          echo "INSERT INTO mail_alias SET mail='mailman_${FQDN}', alias='\"| $MAILMAN_SCRIPT post mailman\"';"
          for kind in request owner admin bounces confirm join \
                      leave subscribe unsubscribe; do
              echo "INSERT INTO mail_domain SET mail='mailman-${kind}@${FQDN}', alias='mailman-${kind}_${FQDN}', uid=2000, pop=0, type=1;"
              echo "INSERT INTO mail_alias SET mail='mailman-${kind}_${FQDN}', alias='\"| $MAILMAN_SCRIPT ${kind} mailman\"';" 
          done
        ) | mysql --defaults-file=/etc/alternc/my.cnf -f || true
    fi

    ln -sf /usr/lib/cgi-bin/mailman /var/alternc/cgi-bin/mailman
    alternc.install || true         # don't fail package config if alternc.install bails out

    # ADD Mailman menu item : 
    if ! grep -q "^menu_mailman.php$" "$MENUFILE"; then
        rm -f $MENUFILE.alternc_mailman
        sed -e "s/menu_ftp.php/&\\
menu_mailman.php/" <$MENUFILE >$MENUFILE.alternc_mailman
        mv -f $MENUFILE.alternc_mailman $MENUFILE
    fi
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

# vim: et sw=4
