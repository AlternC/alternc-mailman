#!/bin/bash -e

. /usr/share/debconf/confmodule

CONFIGFILE="/etc/alternc/local.sh"

#mailman core
MAILMAN_CONFIG="/etc/mailman3/mailman.cfg"
MAILMAN_CONFIG_TEMPLATE="/etc/alternc/templates/mailman/mailman.cfg"
MAILMAN_CONFIG_BACKUP="/var/lib/alternc/backups/etc-mailman-mailman.cfg"

#hyperkitty
MAILMAN_HYPERKITTY_CONFIG="/etc/mailman3/mailman-hyperkitty.cfg"
MAILMAN_HYPERKITTY_PWD=$(rgrep "api_key" $MAILMAN_HYPERKITTY_CONFIG | awk '{print $2}')

#Mailman web (django)
MAILMAN_WEB_CONFIG="/etc/mailman3/mailman-web.py"
MAILMAN_WEB_CONFIG_TEMPLATE="/etc/alternc/templates/mailman/mailman-web.py"
MAILMAN_CONFIG_BACKUP="/var/lib/alternc/backups/etc-mailman-mailman-web.py"

MAILMAN_PASS="`perl -e 'print map{("a".."z","A".."Z",0..9)[int(rand(62))]}(1..10)' `" # copy-pasted from alternc/debian/config

# new packages put binaries in /usr/lib/mailman3/bin
if [ -d /usr/lib/mailman3/bin ]
then
    MAILMAN_BIN="/usr/lib/mailman3/bin"
else
    MAILMAN_BIN="/usr/lib/mailman3/bin" #useless
fi

case "$1" in
  configure)
    . "$CONFIGFILE"
    . /usr/lib/alternc/functions.sh
    # Then, configure the quota for "mailman"
    /usr/lib/alternc/quota_init mailman 0 

# hyperkitty manage archives
#--------------------------------------------------------------------------------------ARCHIVES I think is not need START
#    echo "fixing private archive rights for mailman" 
#    dpkg-statoverride --list /var/lib/mailman/archives/private >/dev/null || 
#    dpkg-statoverride --add root list 2775 /var/lib/mailman/archives/private
#    chmod 2775 /var/lib/mailman/archives/private
#--------------------------------------------------------------------------------------ARCHIVES I think is not need END
    
    echo "Installing mysql table"
    mysql --defaults-file=/etc/alternc/my.cnf < /usr/share/alternc/install/mailman.sql

    # Install generated mailman configuration if it has not been modified since
    # last package configuration
    if [ -f "$MAILMAN_CONFIG_BACKUP" ]; then
        if ! diff -q "$MAILMAN_CONFIG" "$MAILMAN_CONFIG_BACKUP"; then
            echo "$MAILMAN_CONFIG has been modified since last alternc-mailman"
            echo "configuration.  You should merge your changes to"
            echo "$MAILMAN_CONFIG_TEMPLATE and delete $MAILMAN_CONFIG_BACKUP"
            exit 1
        fi
    fi
    if [ -f "$MAILMAN_WEB_CONFIG_BACKUP" ]; then
        if ! diff -q "$MAILMAN_WEB_CONFIG" "$MAILMAN_WEB_CONFIG_BACKUP"; then
            echo "$MAILMAN_WEB_CONFIG has been modified since last alternc-mailman"
            echo "configuration.  You should merge your changes to"
            echo "$MAILMAN_WEB_CONFIG_TEMPLATE and delete $MAILMAN_WEB_CONFIG_BACKUP"
            exit 1
        fi
    fi
    
    SECRET_KEY=$(rgrep "^SECRET_KEY" $MAILMAN_WEB_CONFIG | awk '{print $3}' | cut -d "'" -f "2")
    REST_KEY=$(rgrep "^MAILMAN_REST_API_PASS" $MAILMAN_WEB_CONFIG | awk '{print $3}' | cut -d "'" -f "2")
    ARCHIVER_KEY=$(rgrep "^MAILMAN_ARCHIVER_KEY" $MAILMAN_WEB_CONFIG | awk '{print $3}' | cut -d "'" -f "2")
    dbmailman3webpass=$(rgrep "^url:" $MAILMAN_CONFIG | cut -d ":" -f "4" | cut -d "@" -f "1")
    
    #generate_string from => /usr/lib/alternc/functions.sh
    if [ $SECRET_KEY == "" ];then
        SECRET_KEY=$(generate_string 32 | sed -e "s/['|&]/\\&/g")
    fi
    if [ $REST_KEY == "" ];then
        REST_KEY=$(generate_string 32 | sed -e "s/['|&]/\\&/g")
    fi
    if [ $ARCHIVER_KEY == "" ];then
        ARCHIVER_KEY=$(generate_string 32 | sed -e "s/['|&]/\\&/g")
    fi
    if [ $dbmailman3webpass == "" ];then
        dbmailman3webpass=$(generate_string 32 | sed -e "s/['|&]/\\&/g")
    fi

    sed -e "s/%%fqdn%%/$FQDN/;s|%%restkey%%|$REST_KEY|;s|%%archiverkey%%|$ARCHIVER_KEY|;s|%%dbmailman3webpass%%|$dbmailman3webpass|;s|%%secretkey%%|$SECRET_KEY|" < "$MAILMAN_CONFIG_TEMPLATE" > "$MAILMAN_CONFIG"
    cp -a -f "$MAILMAN_CONFIG" "$MAILMAN_CONFIG_BACKUP"

    sed -e "s/%%fqdn%%/$FQDN/;s|%%restkey%%|$REST_KEY|;s|%%archiverkey%%|$ARCHIVER_KEY|;s|%%dbmailman3webpass%%|$dbmailman3webpass|;s|%%secretkey%%|$SECRET_KEY|" < "$MAILMAN_WEB_CONFIG_TEMPLATE" > "$MAILMAN_WEB_CONFIG"
    cp -a -f "$MAILMAN_WEB_CONFIG" "$MAILMAN_WEB_CONFIG_BACKUP"


    MAILMAN_VERSION=`dpkg -l mailman3-full | grep ^ii | awk '{print $3}' | sed -e s/-.*// -e 's/[^:]*://'`
    echo "detected mailman version $MAILMAN_VERSION"
    if [ -d "/usr/share/alternc-mailman/patches/mailman-true-virtual-$MAILMAN_VERSION.d" ] ; then
      PATCHDIR="/usr/share/alternc-mailman/patches/mailman-true-virtual-$MAILMAN_VERSION.d"
    else
      PATCHDIR=""
      PATCHFILE="/usr/share/alternc-mailman/patches/mailman-true-virtual-$MAILMAN_VERSION.patch"
    fi

    PATCH_MARKER="/usr/share/alternc-mailman/patches/mailman-true-virtual.applied"
    if [ -h $PATCH_MARKER ]; then
        PATCH_VERSION=`readlink $PATCH_MARKER | sed -e 's/^.*-//;s/\.patch$//;s/\.d$//'`
        echo "mailman patch detected, version $PATCH_VERSION"
        if [ "$PATCH_VERSION" = "$MAILMAN_VERSION" ]; then
            echo "mailman already patched, will not patch again"
        else
            echo "wrong version of the patch, we assume that mailman was upgraded"
            rm -f $PATCH_MARKER
        fi
    fi

    if [ "$PATCHDIR" = "" ] ; then
        if [ ! -r $PATCHFILE ]; then
            echo "no patchfile for mailman $MAILMAN_VERSION"
        fi
    fi

    if [ -r "$PATCHFILE" -o  "$PATCHDIR" != "" ] ; then if [ ! -h $PATCH_MARKER ]; then
        db_get alternc-mailman/patch-mailman || true
        if [ "$RET" = "true" ]; then
            if [ "$PATCHDIR" != "" ] ; then # we have multiple files
            {
                patch_ok="yes"
                for pfile in $PATCHDIR/* ; do
                    if patch --dry-run -d/ -p0 < $pfile; then
                        echo "applying patch $pfile :"
                        if patch -d/ -p0 < $pfile; then
                            echo "patch applied sucessfully"
                        else
                            patch_ok="no"
                            echo "cannot apply patch, your mailman is probably broken now, aborting"
                            false
                        fi
                    else
                        echo "patch will not apply cleanly, aborting"
                        patch_ok="no"
                    fi
                    if [ "$patch_ok" = "yes" ] ; then
                        # this will tell alternc-mailman the patch was applied successfully
                        ln -fs $PATCHDIR $PATCH_MARKER
                        invoke-rc.d mailman restart || true
                    fi
                done
            }
            else # old fashion unique patch file
            {
                echo "testing the patch"
                if patch --dry-run -d/ -p0 < $PATCHFILE; then
                    echo "applying patch"
                    if patch -d/ -p0 < $PATCHFILE; then
                        echo "patch applied sucessfully"
                        # this will tell alternc-mailman the patch was applied successfully
                        ln -fs $PATCHFILE $PATCH_MARKER
                        invoke-rc.d mailman restart || true
                    else
                        echo "cannot apply patch, your mailman is probably broken now, aborting"
                        false
                    fi
                else
                    echo "patch will not apply cleanly, aborting"
                fi
            }
            fi ; fi
        else
            echo "not applying virtual mailman patch"
        fi
    fi

    # tell debconf to go away, otherwise alternc.install will freeze
    db_stop

    # Create default quota "mailman" with value 0
    mysql --defaults-file=/etc/alternc/my.cnf -Bse "INSERT IGNORE INTO defquotas VALUES ('mailman', 0, 'default')" || true

    echo "installing required apache modules" 
    a2enmod rewrite
    # only necessary on Jessie: 
    a2enmod cgi || true 

    # make the mailman.localdomain goes to local apache2 ;) 
    if ! grep -q "127.0.0.1.*mailman.localdomain" /etc/hosts
    then 
	echo "adding mailman.localdomain to /etc/hosts"
	echo "" >>/etc/hosts
	echo "127.0.0.1  mailman.localdomain" >>/etc/hosts
    fi

    echo "$2" >/var/lib/alternc/backups/alternc-mailman-lastversion
    
    echo -e "\033[31m"
    echo "**********************************************"
    echo "*                                            *"
    echo "*   ALTERNC-MAILMAN  ACTION REQUESTED        *"
    echo "*                                            *"
    echo "* Please run alternc.install to fully deploy *"
    echo "* Then change your quota to activate Mailman *"
    echo "*                                            *"
    echo "**********************************************"
    echo -e "\033[0m"
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

# vim: et sw=4
